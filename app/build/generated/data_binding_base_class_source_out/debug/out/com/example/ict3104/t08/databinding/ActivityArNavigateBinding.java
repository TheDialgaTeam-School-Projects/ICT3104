// Generated by view binder compiler. Do not edit!
package com.example.ict3104.t08.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.esri.arcgisruntime.toolkit.ar.ArcGISArView;
import com.example.ict3104.t08.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityArNavigateBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ArcGISArView arView;

  @NonNull
  public final Button calibrateButton;

  @NonNull
  public final TextView helpLabelTextView;

  @NonNull
  public final Button navigateStartButton;

  private ActivityArNavigateBinding(@NonNull ConstraintLayout rootView,
      @NonNull ArcGISArView arView, @NonNull Button calibrateButton,
      @NonNull TextView helpLabelTextView, @NonNull Button navigateStartButton) {
    this.rootView = rootView;
    this.arView = arView;
    this.calibrateButton = calibrateButton;
    this.helpLabelTextView = helpLabelTextView;
    this.navigateStartButton = navigateStartButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityArNavigateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityArNavigateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_ar_navigate, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityArNavigateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arView;
      ArcGISArView arView = rootView.findViewById(id);
      if (arView == null) {
        break missingId;
      }

      id = R.id.calibrateButton;
      Button calibrateButton = rootView.findViewById(id);
      if (calibrateButton == null) {
        break missingId;
      }

      id = R.id.helpLabelTextView;
      TextView helpLabelTextView = rootView.findViewById(id);
      if (helpLabelTextView == null) {
        break missingId;
      }

      id = R.id.navigateStartButton;
      Button navigateStartButton = rootView.findViewById(id);
      if (navigateStartButton == null) {
        break missingId;
      }

      return new ActivityArNavigateBinding((ConstraintLayout) rootView, arView, calibrateButton,
          helpLabelTextView, navigateStartButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
